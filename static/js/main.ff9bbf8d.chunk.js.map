{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","imdbUrl","description","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","isMovieLoaded","setIsMovieLoaded","isMovieLoading","setIsMovieLoading","isMovieFounded","setIsMovieFounded","setMovie","getMovieByTitle","fetch","then","res","json","catch","error","Response","Error","getMovie","data","hasOwnProperty","Title","Plot","Poster","imdbID","isNoMoviesWithSuchTitle","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","trim","onClick","find","App","setMovies","newMovie","currMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EAIED,EAJFC,OACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,QACAC,EACEJ,EADFI,YAGF,OACE,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKL,EACLM,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDH,SAIpD,sBAAKG,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EACD,uBACA,mBAAGI,KAAML,EAAS,UAAQ,WAA1B,4BCnCGM,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,0BCDNC,EAA6B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUJ,EAAa,EAAbA,OACrD,EAA0BK,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA0BR,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcwB,EAAd,KAOMC,EAAkB,SAACvB,GACvBmB,GAAkB,GCrBf,SAAkBL,GACvB,OAAOU,MAAM,GAAD,OAHE,2CAGF,cAAiBV,IAC1BW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAACC,GAAD,MAAY,CACjBC,SAAU,QACVC,MAAOF,MDiBTG,CAAShC,GACNyB,MAAK,SAACQ,GAEL,GAAIA,EAAKC,eAAe,SACtBb,GAAkB,OACb,CACL,MAKIY,EAJFE,EADF,EACEA,MACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,OAOFhB,EAAS,CACPtB,MAAOmC,EACPjC,YAAakC,EACbrC,OAP0B,QAAXsC,EACb,4DACAA,EAMFpC,QAAQ,8BAAD,OAAgCqC,GACvC5B,OAAQ4B,IAEVjB,GAAkB,GAGpBJ,GAAiB,GACjBE,GAAkB,MAEnBS,OAAM,SAAAC,GACL,MAAM,IAAIE,MAAMF,OAqBhBU,EAA0BvB,IAAkBI,EAElD,OACE,qCACE,uBAAMjB,UAAU,aAAaqC,SATZ,SAACC,GACpBA,EAAEC,iBACFnB,EAAgBT,IAOd,UACE,sBAAKX,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwC,QAAQ,cAAjC,yBAIA,qBAAKxC,UAAU,UAAf,SACE,uBACE,UAAQ,aACRyC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ3C,UAAU,kBACV4C,MAAOjC,EACPkC,SA7Ec,SAACP,GACzB1B,EAAS0B,EAAEQ,OAAOF,OAClB1B,GAAkB,QA+EXkB,GACC,mBAAGpC,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRyC,KAAK,SACLzC,UAAW+C,IAAG,kBAAmB,CAC/B,aAAchC,IAEhBiC,SAA2B,KAAjBrC,EAAMsC,OANlB,SAQGtD,EAAQ,eAAiB,mBAI9B,qBAAKK,UAAU,UAAf,SACGa,GAAiBlB,GAChB,wBACE,UAAQ,YACR8C,KAAK,SACLzC,UAAU,oBACVkD,QAlES,WAEnBvD,IACIU,EAAO8C,MAAK,qBAAG5C,SAAwBZ,EAAMY,WAEjDE,EAASd,GAGXwB,EAAS,MACTP,EAAS,KAqDC,qCAaPjB,GACC,sBAAKK,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWL,MAAOA,WEtIfyD,EAAM,WACjB,MAA4B1C,mBAAkB,IAA9C,mBAAOL,EAAP,KAAegD,EAAf,KAKA,OACE,sBAAKrD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAGtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAWS,SAXA,SAAC6C,GAChBD,GAAU,SAAAE,GAAU,4BAAQA,GAAR,CAAoBD,QAULjD,OAAQA,UCf/CmD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ff9bbf8d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    imdbUrl,\n    description,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\nimport './FindMovie.scss';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n  movies: Movie[];\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [query, setQuery] = useState('');\n  const [isMovieLoaded, setIsMovieLoaded] = useState(false);\n  const [isMovieLoading, setIsMovieLoading] = useState(false);\n  const [isMovieFounded, setIsMovieFounded] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setIsMovieFounded(true);\n  };\n\n  const getMovieByTitle = (title: string) => {\n    setIsMovieLoading(true);\n    getMovie(title)\n      .then((data) => {\n        // eslint-disable-next-line no-prototype-builtins\n        if (data.hasOwnProperty('Error')) {\n          setIsMovieFounded(false);\n        } else {\n          const {\n            Title,\n            Plot,\n            Poster,\n            imdbID,\n          } = data as MovieData;\n\n          const movieImg = Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : Poster;\n\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: movieImg,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n          setIsMovieFounded(true);\n        }\n\n        setIsMovieLoaded(true);\n        setIsMovieLoading(false);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  };\n\n  const handleAddMovie = () => {\n    if (\n      movie\n      && !movies.find(({ imdbId }) => imdbId === movie.imdbId)\n    ) {\n      addMovie(movie);\n    }\n\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    getMovieByTitle(query);\n  };\n\n  const isNoMoviesWithSuchTitle = isMovieLoaded && !isMovieFounded;\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isNoMoviesWithSuchTitle && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isMovieLoading,\n              })}\n              disabled={query.trim() === ''}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {isMovieLoaded && movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cc08dd17';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch((error) => ({\n      Response: 'False',\n      Error: error,\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currMovies => [...currMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}